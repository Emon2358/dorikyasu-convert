name: Dreamcast Port CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      hdi_file:
        description: 'HDIファイル名（リポジトリルート）'
        required: true
        default: '【PC98】雫.hdi'

jobs:
  extract-assets:
    name: Extract PC-98 HDI Assets
    runs-on: ubuntu-latest
    env:
      HDI_FILE: ${{ github.event.inputs.hdi_file || '【PC98】雫.hdi' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip python3-dev libpq-dev build-essential dosbox unzip \
            p7zip-full xorriso
          pip3 install --upgrade pip setuptools wheel
          pip3 install pg8000

      - name: Extract raw assets from HDI
        run: |
          echo "Extracting assets from '$HDI_FILE'"
          mkdir -p assets/raw_gem assets/audio assets/tmp
          # xorriso を使ってHDIイメージを丸ごと展開（osirrox モード）:contentReference[oaicite:0]{index=0}
          xorriso -osirrox on -indev "$HDI_FILE" -extract / assets/tmp
          # GEM と WAV だけを assets/raw_gem/ と assets/audio/ に振り分け
          find assets/tmp -type f -iname '*.GEM' -exec cp {} assets/raw_gem/ \;
          find assets/tmp -type f -iname '*.WAV' -exec mv {} assets/audio/ \;
          rm -rf assets/tmp

      - name: Convert .GEM to PNG
        run: |
          mkdir -p assets/images
          python3 tools/convert_gem.py assets/raw_gem assets/images

      - name: Extract scripts
        run: |
          mkdir -p assets/scripts
          python3 tools/extract_scripts.py "$HDI_FILE" > assets/scripts/story.txt

      - name: Upload extracted assets
        uses: actions/upload-artifact@v4
        with:
          name: shizuku-assets
          path: assets/

  build-dreamcast:
    name: Build Dreamcast VN
    runs-on: ubuntu-latest
    needs: extract-assets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download extracted assets
        uses: actions/download-artifact@v4
        with:
          name: shizuku-assets
          path: assets/

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y git build-essential libsndfile1-dev libpng-dev

      - name: Setup KallistiOS
        run: |
          git clone --depth 1 https://github.com/KallistiOS/KallistiOS.git kos
          pushd kos
          make -j$(nproc)
          popd
          echo "KOS_BASE=$PWD/kos" >> $GITHUB_ENV

      - name: Setup ONScripter Dreamcast
        run: |
          git clone --depth 1 https://github.com/ogapee/onscripter.git onscripter-dc
          mkdir -p onscripter-dc/data
          cp -R assets/images/* onscripter-dc/data/
          cp -R assets/audio/* onscripter-dc/data/
          cp assets/scripts/story.txt onscripter-dc/data/

      - name: Build for Dreamcast
        env:
          KOS_BASE: ${{ env.KOS_BASE }}
        run: |
          pushd onscripter-dc
          make -f Makefile.dc dc
          popd

      - name: Upload Dreamcast CDI
        uses: actions/upload-artifact@v4
        with:
          name: shizuku-dreamcast-cdi
          path: onscripter-dc/bin/*.cdi
